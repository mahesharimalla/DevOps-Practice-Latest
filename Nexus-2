How to create the repos?
Integrate Repo with Maven Java Projects?
Release Repos
Snapshot Repos


What is the default port of Nexus repository?
The default behavior of Nexus is to attempt to bind to port 8081 or 0.0. 0.0 (or every available interface). 
If you want to change the port or the host, you will need to modify the file in NEXUS_HOME/conf/nexus.

Default port number for Nexus is 8081.
https://13.221.2.210:8081/----------------> Accessing the Nexus Server.

For changing the port number & application context path for nexus in file opt/nexus/etc/nexus-default.properties
#Jetty section
application-port=9980
nexus-context-path=/mithuntechnologies
:wq
If you made any changes then after doing the changes we need to restart the nexus service.
Command to restart the service: service nexus restart


Go to browser & browse the below mentioned link: 
https://13.221.2.210:9980/mithuntechnologies

Create a repositories in the Sonatype Nexus Repository Manager by selecting the default 
Create Repository--> Maven2(hosted)---> facebook-snapshot by selecting the maven2 version policy  with Snapshot
select default settings & create a repository.


Create Repository--> Maven2(hosted)---> facebook-releases by selecting the maven2 version policy  with Rlease 
select default settings & create a repository.


After creating the repository it will give a URL's.




Nexus Repo Details:
===================
We should configure our Nexus Repo details in pom.xml file. Inside of DistributionManagement tag.
maven-web-application project/pom.xml:

Pom.xml:

<groupId>com.mt</groupId>
        <artifactId>maven-web-application</artifactId>
        <packaging>war</packaging>
        <version>0.0.1-RELEASE</version>                          //We should configure either release or snapshot version in <groupId> version 




<distributionManagement>               // In which tag we need to place the Nexus repository URL 
<repository>
<id>nexus</id>
<name>Facebook-Releases Nexus Rpository</name>
<url>https://13.221.2.210:9980/mithuntechnologies/repository/facebook-releases/</url>
</repository>

<snaphotRepository>
<id>nexus</id>
<name>Facebook-Snapshots Nexus Rpository</name>
<url>https://13.221.2.210:9980/mithuntechnologies/repository/facebook-snapshots/</url>
</snaphotRepository>
<distributionManagement>


Where we need to configure our credentials ? In the Settings.xml file we need to configure our nexus credentials.
cd /opt/apache-maven-3.8.4/conf/settings.xml file

For adding the Nexus Credentials we should add the nexus credentails in settings.xml file
<servers>

<server>
<id>nexus</id>                    //id would be the same in POM.XML & in settings.xml file
 <username>admin</username>
 <password>admin123</password>         //Default username & password for Nexus is admin & admin123
</server>

</servers>



============================================================================================================================================================================================

cd -
cd /root/maven-web-application       [here we can find all the directories like docker-compose.yaml Jenkinsfile pom.xml src target Dockerfile .....etc
Below Goals to be execute:
validate
compile 
test
package
install
mvn clean deploy

mvn deploy   ----------which we can used to upload the artifact into remote repository

It will deployed into the Sonatype Nexus Repository ---> facebook-snapshot inside of 0.0.1-20230315.011855-1



- On going developement packages will contain on the Snapshots.
- All the Production version packages are available on the Releases.

403---------> Check the user Access
401---------> Check the credentails

When you change version in pom.xml.
<version>1.0.0</version>    

mvn clean deploy --------------> then it will deploy into the Releases nexus repository
If we do again mvn clean deploy with the same version id it will not going to override it will throws an error.

Apply the redeploy in the Repository administration instead of No redeploy.


Suppose if we have 10 jars where we need to store & What we need to do?
=======================================================================
We can download our jar files from our remote repository (AWS Linux Instance) to our local system(Windows) we can use FTP softwares like filezilla or anyother softwares for downloading jars.
After downloading successfully from remote system we can upload our jar files into Nexus Hosted Repository Browse--> MSS_Hosted_Repo---> Upload Component.

As a DevOps engineer we are the responsible for uploading artifacts in Remote Repositorys.





